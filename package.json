{
  "name": "pyrocms-cheatsheet",
  "version": "1.2.0",
  "description": "A quick reference cheat sheet for PyroCMS 3.",
  "homepage": "https://github.com/websemantics/pyrocms-cheatsheet",
  "main": "index.js",
  "private": true,
  "repository": {
    "type": "git",
    "url": "websemantics/pyrocms-cheatsheet.git"
  },
  "config": {
    "minify": false,
    "deploy": {
      "name": "iAyeBot",
      "email": "iayebot@websemantics.ca",
      "branch": "master:gh-pages",
      "message": "Deploy to gh-pages"
    },
    "semantic": {
      "install": true,
      "src": "./node_modules/semantic-ui/src/",
      "config": "./src/less/semantic/theme.config"
    },
    "dir": {
      "src": "./src/",
      "dist": "./public/"
    }
  },
  "scripts": {
    "postinstall": "[ \"$npm_package_config_semantic_install\" = \"true\" ] && npm run semantic ",
    "build": "npm run copy -s && npm run build:js -s && npm run build:css -s && npm run build:html -s && npm run build:cname -s ",
    "build:clean": "rm -rf $npm_package_config_dir_dist ",
    "build:init": "mkdir -p ${npm_package_config_dir_dist}js && mkdir -p ${npm_package_config_dir_dist}css",
    "build:html": "cp -r ${npm_package_config_dir_src}html/* $npm_package_config_dir_dist ",
    "build:cname": "[ ${npm_package_config_domain} ] && echo $npm_package_config_domain > \"${npm_package_config_dir_dist}CNAME\" || echo '' ",
    "build:css": "[ \"$npm_package_config_minify\" = \"true\" ] &&  npm run build:css:minify -s || npm run build:css:default -s ",
    "build:css:default": "lessc ${npm_package_config_dir_src}less/index.less ${npm_package_config_dir_dist}css/styles.css ",
    "build:css:minify": "lessc ${npm_package_config_dir_src}less/index.less | uglifycss > \"${npm_package_config_dir_dist}css/styles.css\" ",
    "build:js": "[ \"$npm_package_config_minify\" = \"true\" ] && npm run build:js:minify -s || npm run build:js:default -s ",
    "build:js:default": "browserify ${npm_package_config_dir_src}js/index.js -o ${npm_package_config_dir_dist}js/index.js ",
    "build:js:minify": "browserify ${npm_package_config_dir_src}js/index.js | uglifyjs -mc > \"${npm_package_config_dir_dist}js/index.js\" ",
    "build:development": "cross-env NODE_ENV=development npm run build ",
    "build:production": "cross-env NODE_ENV=production npm run build ",
    "prebuild": "npm run build:clean -s && npm run build:init -s ",
    "copy": "npm run copy:assets -s && npm run copy:fonts -s && npm run copy:default -s ",
    "copy:default": "# ",
    "copy:assets": "cp -r ${npm_package_config_dir_src}assets/* $npm_package_config_dir_dist ",
    "copy:fonts": "[ \"$npm_package_config_semantic_install\" = \"true\" ] && npm run semantic:fonts -s ",
    "deploy": "[ ${GH_TOKEN} ] && npm run deploy:travis -s || npm run deploy:local -s ",
    "deploy:local": "repository=$(echo $npm_package_repository_url | sed 's/.*+//') && cd $npm_package_config_dir_dist && git push --force --quiet $repository ${npm_package_config_deploy_branch} > /dev/null 2>&1 ",
    "deploy:travis": "cd $npm_package_config_dir_dist && git push --force --quiet \"https://${GH_TOKEN}@${GH_REF}\" ${npm_package_config_deploy_branch} > /dev/null 2>&1 ",
    "predeploy": "npm run build -s && cd $npm_package_config_dir_dist && git init && git config user.name $npm_package_config_deploy_name && git config user.email $npm_package_config_deploy_email && git add -A . && git commit -am \"$npm_package_config_deploy_message\" ",
    "semantic": "npm install semantic-ui --save",
    "semantic:init": "mkdir -p './semantic/src/definitions' && echo '{\"base\":\"semantic/\",\"paths\":{\"source\":{\"config\":\"src/theme.config\",\"definitions\":\"src/definitions/\",\"site\":\"src/site/\",\"themes\":\"src/themes/\"},\"output\":{\"packaged\":\"dist/\",\"uncompressed\":\"dist/components/\",\"compressed\":\"dist/components/\",\"themes\":\"dist/themes/\"},\"clean\":\"dist/\"},\"permission\":false,\"rtl\":false}' > './semantic.json' ",
    "semantic:fonts": "cp -r ${npm_package_config_semantic_src}themes/default/assets/fonts ${npm_package_config_dir_dist}fonts/semantic ",
    "presemantic": "npm run semantic:init -s ",
    "postsemantic": "echo \"@import '${npm_package_config_semantic_config}';\" > \"${npm_package_config_semantic_src}theme.config\" ",
    "watch": "nodemon -q -w $npm_package_config_dir_src --ext '.' --exec 'npm run build' ",
    "watch:js": "nodemon -q -w ${npm_package_config_dir_src}js --ext '.' --exec 'npm run build:js' ",
    "watch:css": "nodemon -q -w ${npm_package_config_dir_src}less --ext '.' --exec 'npm run build:css' ",
    "serve": "http-server -p 9090 $npm_package_config_dir_dist ",
    "live-reload": "live-reload --port 9091 $npm_package_config_dir_dist ",
    "open": "opener http://localhost:9090 ",
    "dev": "npm run open -s && parallelshell 'npm run live-reload -s' 'npm run serve -s' 'npm run watch -s' ",
    "test": "echo 'Error: no test specified' && exit 1 "
  },
  "bugs": {
    "url": "https://github.com/websemantics/pyrocms-cheatsheet/issues"
  },
  "keywords": [
    "node.js",
    "ibuild.io",
    "pyrocms-cheatsheet"
  ],
  "author": "Adnan M.Sagar, PhD.",
  "license": "MIT",
  "devDependencies": {
    "babel-core": "^6.0.0",
    "babel-plugin-transform-runtime": "^6.0.0",
    "babel-preset-es2015": "^6.0.0",
    "babel-preset-stage-2": "^6.0.0",
    "babel-runtime": "^6.0.0",
    "babelify": "^7.2.0",
    "less": "*",
    "uglifycss": "*",
    "uglifyjs": "*",
    "browserify": "^12.0.1",
    "browserify-hmr": "^0.3.1",
    "cross-env": "^1.0.6",
    "http-server": "*",
    "nodemon": "*",
    "live-reload": "*",
    "opener": "*",
    "parallelshell": "*"
  },
  "dependencies": {
    "gitters": "*",
    "handlebars": "*",
    "jquery": "^2.1.4",
    "jquery-highlight": "*",
    "markdown-html-ast": "*",
    "masonry-plus": "*",
    "prismjs": "*",
    "semantic-ui": "^2.2.9",
    "underscore.string": "*"
  },
  "browserify": {
    "transform": [
      "babelify"
    ]
  }
}
